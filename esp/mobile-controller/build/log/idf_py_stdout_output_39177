Command: ninja flash
[1/10] Performing build step for 'bootloader'
[1/1] cd /home/johnny/git/TRAILzyb/esp/mobile-controller/build/bootloader/esp-idf/esptool_py && /home/johnny/.espressif/python_env/idf5.5_py3.12_env/bin/python /home/johnny/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/johnny/git/TRAILzyb/esp/mobile-controller/build/bootloader/bootloader.bin
Bootloader binary size 0x6610 bytes. 0x9f0 bytes (9%) free.
[2/10] No install step for 'bootloader'
[3/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/mobile-controller.c.obj
[4/10] Completed 'bootloader'
[5/10] Linking C static library esp-idf/main/libmain.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable mobile-controller.elf
[8/10] Generating binary image from built executable
esptool.py v4.9.dev5
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/johnny/git/TRAILzyb/esp/mobile-controller/build/mobile-controller.bin
[9/10] cd /home/johnny/git/TRAILzyb/esp/mobile-controller/build/esp-idf/esptool_py && /home/johnny/.espressif/python_env/idf5.5_py3.12_env/bin/python /home/johnny/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/johnny/git/TRAILzyb/esp/mobile-controller/build/partition_table/partition-table.bin /home/johnny/git/TRAILzyb/esp/mobile-controller/build/mobile-controller.bin
mobile-controller.bin binary size 0x2dbd0 bytes. Smallest app partition is 0x100000 bytes. 0xd2430 bytes (82%) free.
[9/10] cd /home/johnny/esp/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/johnny/esp/esp-idf -D "SERIAL_TOOL=/home/johnny/.espressif/python_env/idf5.5_py3.12_env/bin/python;;/home/johnny/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/johnny/git/TRAILzyb/esp/mobile-controller/build -P /home/johnny/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32 -p /dev/ttyUSB0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 mobile-controller.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.9.dev5
Serial port /dev/ttyUSB0
Connecting....
Chip is ESP32-D0WD-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 08:b6:1f:b7:ce:04
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x0003dfff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 26128 bytes to 16494...
Writing at 0x00001000... (50 %)
Writing at 0x0000757b... (100 %)

A fatal error occurred: Serial data stream stopped: Possible serial noise or corruption.
FAILED: CMakeFiles/flash /home/johnny/git/TRAILzyb/esp/mobile-controller/build/CMakeFiles/flash 
cd /home/johnny/esp/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/johnny/esp/esp-idf -D "SERIAL_TOOL=/home/johnny/.espressif/python_env/idf5.5_py3.12_env/bin/python;;/home/johnny/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/johnny/git/TRAILzyb/esp/mobile-controller/build -P /home/johnny/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
ninja: build stopped: subcommand failed.
