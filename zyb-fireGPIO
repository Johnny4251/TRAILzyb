import time
import os
import threading
import RPi.GPIO as GPIO

BCM_INPUT_PIN = 17

GPIO.setmode(GPIO.BCM)
# Use a pull-down resistor to avoid floating state
GPIO.setup(BCM_INPUT_PIN, GPIO.IN, pull_up_down=GPIO.PUD_DOWN)

def run_wolf():
    os.system('direwolf')

def capture():
    os.system('./run')

def listen_to_gpio():
    try:
        while True:
            time.sleep(5)
            state = GPIO.input(BCM_INPUT_PIN)
            print(f"GPIO{BCM_INPUT_PIN} state: {'HIGH' if state else 'LOW'}")
            
            if state == GPIO.HIGH:
                print(f"GPIO{BCM_INPUT_PIN} is HIGH, starting capture and direwolf...")
                capture_thread = threading.Thread(target=capture)
                wolf_thread = threading.Thread(target=run_wolf)

                wolf_thread.start()
                capture_thread.start()
                
                capture_thread.join()
                print("Capture complete")
                wolf_thread.join()
                print("Direwolf process complete")

    except KeyboardInterrupt:
        GPIO.cleanup()
        print("Clean exit")

if __name__ == "__main__":
    listen_to_gpio()

